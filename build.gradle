buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.blamejared.com' }

        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath group: 'com.blamejared', name: 'ModTemplate', version: '1.+', changing: true
    }
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.blamejared.modtemplate'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.matthewprenger.cursegradle'


version = '1.0.0'
if(project.hasProperty('branch')) {
    version += ("." + project.branch)
}

group = 'com.blamejared.contenttweaker'
archivesBaseName = 'ContentTweaker-1.16'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

//Shuts up javadoc failures
if (JavaVersion.current().isJava8Compatible()) {

    allprojects {

        tasks.withType(Javadoc) {
            options.tags += "docParam"
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

compileJava {
    options.compilerArgs += ["-Acrafttweaker.processor.document.output_directory=${file('docsOut')}"]
}

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    runs {
        client {
            workingDirectory project.file('run')

            mods {
                contenttweaker {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')

            mods {
                contenttweaker {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', 'contenttweaker', '--all', '--output', file('src/generated/resources/')

            mods {
                contenttweaker {
                    source sourceSets.main
                }
            }
        }
    }
}

modTemplate {
    mcVersion "1.16.5"
    curseHomepage "https://www.curseforge.com/minecraft/mc-mods/contenttweaker"
    displayName "ContentTweaker"

    changelog {
        enabled true
        firstCommit "b762862ec40682cfa40f56e730d73b3bf3eb568f"
        repo "https://github.com/CraftTweaker/ContentTweaker"
        changelogFile "changelog.md"
    }
    webhook {
        enabled true
        curseId "237065"
        avatarUrl "https://i.blamejared.com/cot.png"
    }
}


repositories {
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://maven.mcmoddev.com"
    }
    maven {
        url "http://mmd.blamejared.com/"
    }
}

dependencies {
    String crafttweakerBuildVersion = "292"
    String forgeVersion = "1.16.5-36.0.14"

    minecraft("net.minecraftforge:forge:$forgeVersion")
    compile fg.deobf("mezz.jei:jei-1.16.4:7.6.1.65")
    compile fg.deobf("net.darkhax.openloader:OpenLoader-1.16.3:7.0.3")
    compile fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.16.5:7.1.0.$crafttweakerBuildVersion")

    annotationProcessor 'com.google.code.gson:gson:2.8.6'
    annotationProcessor 'org.reflections:reflections:0.9.10'

    annotationProcessor minecraft("net.minecraftforge:forge:$forgeVersion")
    annotationProcessor fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.16.5:7.1.0.$crafttweakerBuildVersion")
    annotationProcessor "com.blamejared.crafttweaker:Crafttweaker_Annotation_Processors-1.16.5:1.0.0.$crafttweakerBuildVersion"

}

jar {
    manifest {
        attributes([
            "Specification-Title": "ContentTweaker",
            "Specification-Vendor": "BlameJared",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"BlameJared",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

idea {
    module {
        excludeDirs += [file("run"), file("runServer"), file("CraftTweaker")]
    }
}





task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    classifier = "deobf"
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives deobfJar
}

publishing {

    publications {

        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            // Allows the maven pom file to be modified.
            pom.withXml {

                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    println 'Surpressing artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                    assert dep.parent().remove(dep)
                }
            }

            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
            artifact deobfJar {
                classifier 'deobf'
            }
        }
    }

    repositories {

        maven {

            url "file://" + System.getenv("local_maven")
        }
    }
}


String relType = 'release'
if(project.hasProperty('branch')) {
    relType = (project.branch == 'develop' ? 'beta' : 'alpha')
}

curseforge {

    apiKey = findProperty('curseforge_api_token') ?: "0"
    project {
        id = "237065"
        releaseType = relType
        changelog = file("changelog.md")
        changelogType = 'markdown'

        mainArtifact(jar) {
            relations {
                requiredDependency "crafttweaker"
                //optionalDependency "the-loader"
                optionalDependency "open-loader"
            }
        }
    }
}

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.matthewprenger.cursegradle'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/22e7d543a18cd30675277fbfa3669e3d9e206010/generic/secrets.gradle'

if (project.hasProperty('secretFile')) {
    loadSecrets(new File((String) findProperty('secretFile')))
}

subprojects {
    apply plugin: 'java'

    if(name != "CraftTweaker") {
        apply from: rootProject.file("common.gradle")
    } else {
        it.sourceSets.main.java.srcDirs += new File(it.projectDir, "src/generated/java")
    }
}


version = '1.0.0'
if(project.hasProperty('branch')) {
    version += ("." + project.branch)
}

if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}

group = 'com.blamejared.contenttweaker'
archivesBaseName = 'ContentTweaker-1.16'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

//Shuts up javadoc failures
if (JavaVersion.current().isJava8Compatible()) {

    allprojects {

        tasks.withType(Javadoc) {
            options.tags += "docParam"
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    runs {
        client {
            workingDirectory project.file('run')

            mods {
                contenttweaker {
                    source sourceSets.main
                }

                crafttweaker {
                    source project(":CraftTweaker").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')

            mods {
                contenttweaker {
                    source sourceSets.main
                }
                crafttweaker {
                    source project(":CraftTweaker").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', 'contenttweaker', '--all', '--output', file('src/generated/resources/')

            mods {
                contenttweaker {
                    source sourceSets.main
                }
                crafttweaker {
                    source project(":CraftTweaker").sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://maven.mcmoddev.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.0.1'
    //TODO: Reactivate once available
    //compile fg.deobf("mezz.jei:jei-1.16.2:7.1.0.11")
    compile project(":CraftTweaker")
    annotationProcessor project(":Crafttweaker_Annotation_Processors")
    compile fg.deobf("net.darkhax.openloader:OpenLoader-1.16.3:7.0.3")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ContentTweaker",
            "Specification-Vendor": "BlameJared",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"BlameJared",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

sourceSets {
    main {
        java.srcDirs += "/src/generated/java/"
    }

}

idea {
    module {
        generatedSourceDirs += file("src/generated/java")
        excludeDirs += [file("run"), file("runServer")]
    }
}


task genGitChangelog() {
    def stdout = new ByteArrayOutputStream()
    // first commit to check from, in our case the first commit of the branch
    String firstCommit = "b762862ec40682cfa40f56e730d73b3bf3eb568f"
    String repoLink = "https://github.com/CraftTweaker/ContentTweaker/commit/"
    // was having issues with grep and spaces in the regex
    exec {
        commandLine 'git', 'log', '-i', '--grep=version\\spush', '--grep=open\\sbeta\\sspecific\\scode', '--pretty=tformat:%H', '--date=local', firstCommit + '..@{0}'
        standardOutput = stdout
    }
    if (stdout.toString().trim().indexOf("\n") >= 0) {
        firstCommit = stdout.toString().split("\n")[0].trim()
    }
    System.out.println("Last version hash: \"" + firstCommit + "\"")
    stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '--pretty=tformat:- [%s](' + repoLink + '%H) - %aN - %cd', '--max-parents=1', '--date=local', firstCommit + "..@"
        standardOutput = stdout
    }
    File file = new File("changelog_cot.md")
    file.write("### Current version: " + project.version)
    file.append("\n" + stdout.toString())
    System.out.println("Changelog generated!")
}




task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    classifier = "deobf"
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives deobfJar
}

publishing {

    publications {

        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            // Allows the maven pom file to be modified.
            pom.withXml {

                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    println 'Surpressing artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                    assert dep.parent().remove(dep)
                }
            }

            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
            artifact deobfJar {
                classifier 'deobf'
            }
        }
    }

    repositories {

        maven {

            url "file://" + System.getenv("local_maven")
        }
    }
}


String relType = 'release'
if(project.hasProperty('branch')) {
    relType = (project.branch == 'develop' ? 'beta' : 'alpha')
}

curseforge {

    apiKey = findProperty('curseforge_api_token') ?: "0"
    project {
        id = "237065"
        releaseType = relType
        changelog = file("changelog_cot.md")
        changelogType = 'markdown'

        mainArtifact(jar) {
            relations {
                requiredDependency "crafttweaker"
                //optionalDependency "the-loader"
                optionalDependency "open-loader"
            }
        }
//        addArtifact(sourcesJar)
//        addArtifact(javadocJar)
        addArtifact(deobfJar)
    }
}